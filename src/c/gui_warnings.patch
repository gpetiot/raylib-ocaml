diff --git a/vendor/raygui/src/raygui.h b/vendor/raygui/src/raygui.h
index da231eb..cdc5d2c 100644
--- a/vendor/raygui/src/raygui.h
+++ b/vendor/raygui/src/raygui.h
@@ -515,7 +515,7 @@ RAYGUIAPI Vector2 GuiGrid(Rectangle bounds, float spacing, int subdivs);
 
 // Advance controls set
 RAYGUIAPI int GuiListView(Rectangle bounds, const char *text, int *scrollIndex, int active);            // List View control, returns selected list item index
-RAYGUIAPI int GuiListViewEx(Rectangle bounds, const char **text, int count, int *focus, int *scrollIndex, int active);      // List View with extended parameters
+RAYGUIAPI int GuiListViewEx(Rectangle bounds, char **text, int count, int *focus, int *scrollIndex, int active);      // List View with extended parameters
 RAYGUIAPI int GuiMessageBox(Rectangle bounds, const char *title, const char *message, const char *buttons);                 // Message Box control, displays a message
 RAYGUIAPI int GuiTextInputBox(Rectangle bounds, const char *title, const char *message, const char *buttons, char *text);   // Text Input Box control, ask for text
 RAYGUIAPI Color GuiColorPicker(Rectangle bounds, Color color);                                          // Color Picker control (multiple color controls)
@@ -2713,15 +2713,15 @@ int GuiScrollBar(Rectangle bounds, int value, int minValue, int maxValue)
 int GuiListView(Rectangle bounds, const char *text, int *scrollIndex, int active)
 {
     int itemCount = 0;
-    const char **items = NULL;
+    char **items = NULL;
 
-    if (text != NULL) items = GuiTextSplit(text, &itemCount, NULL);
+    if (text != NULL) items = (char**)(GuiTextSplit(text, &itemCount, NULL));
 
     return GuiListViewEx(bounds, items, itemCount, NULL, scrollIndex, active);
 }
 
 // List View control with extended parameters
-int GuiListViewEx(Rectangle bounds, const char **text, int count, int *focus, int *scrollIndex, int active)
+int GuiListViewEx(Rectangle bounds, char **text, int count, int *focus, int *scrollIndex, int active)
 {
     GuiControlState state = guiState;
     int itemFocused = (focus == NULL)? -1 : *focus;
